---
- hosts: 127.0.0.1
  connection: local
  vars:
    download_dir: "{{ lookup('env', 'HOME') }}"
    kubernetes_version: "1.14"
  become: true
  become_method: sudo
  tasks:
    # Ensure aws cli is installed and configured on local before running these plays
    - name: Get list of installed binaries
      command: ls /usr/local/bin
      register: local_binaries
    - name: Install eksctl
      block:
        - name: Download eksctl
          get_url:
            url: "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_Linux_amd64.tar.gz"
            dest: "{{ download_dir }}/eksctl_download.tgz"
        - name: Expand eksctl
          unarchive:
            src: "{{ download_dir }}/eksctl_download.tgz"
            dest: "{{ download_dir }}"
            remote_src: yes
        - name: Move eksctl to /usr/local/bin
          command: mv {{ download_dir }}/eksctl /usr/local/bin
        - name: Give users permission to execute eksctl
          file:
            path: /usr/local/bin/eksctl
            mode: +x
      when: "local_binaries.stdout.find('eksctl') == -1"
    - name: Install aws-iam-authenticator
      block:
        - name: Download aws-iam-authenticator
          get_url:
            url: "https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator"
            dest: "{{ download_dir }}/aws-iam-authenticator"
        - name: Move aws-iam-authenticator to /usr/local/bin
          command: mv {{ download_dir }}/aws-iam-authenticator /usr/local/bin
        - name: Give users permission to execute
          file:
            path: /usr/local/bin/aws-iam-authenticator
            mode: +x
      when: "local_binaries.stdout.find('aws-iam-authenticator') == -1"
    - name: kubectl
      block:
        - name: Download kubectl
          get_url:
            url: "https://storage.googleapis.com/kubernetes-release/release/v1.16.2/bin/linux/amd64/kubectl"
            dest: "{{ download_dir }}"
        - name: Move kubectl to /usr/local/bin
          command: mv {{ download_dir }}/kubectl /usr/local/bin
        - name: Give users permission to execute
          file:
            path: /usr/local/bin/kubectl
            mode: +x
      when: "local_binaries.stdout.find('kubectl') == -1"
    # ensure that only one cluster exists at a time
    - name: Get existing cluster
      command: eksctl get clusters
      register: existing_clusters
      become: no
    - debug: msg=" {{ existing_clusters.stdout }}"
    - name: Setup K8s-cluster with eksctl
      block:
        - name: Setup clusters on 2 nodes
          command: >
            eksctl create cluster --name capstone-project --version {{ kubernetes_version }} --region us-west-2 --nodegroup-name worker-node --node-type t3.small --nodes 2 --nodes-min 1  --nodes-max 2  --node-ami jenkins
          become: no
        - name: Update kubeconfig
          command: aws eks --region us-west-2 update-kubeconfig --name capstone-project
      when: "existing_clusters.stdout.find('No clusters found') != -1"
